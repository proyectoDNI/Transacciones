/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package transacciones;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author Proyecto DNI
 */
// Interfaz con el menú de transacciones de la clase notaria
public class Notaria extends javax.swing.JFrame {
    public Inicio usuario;
    /**
     * Creates new form Notaria
     */
    public Notaria() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Volver = new javax.swing.JButton();
        Trans = new javax.swing.JComboBox<>();
        Civil = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        Nactual = new javax.swing.JTextField();
        Nnuevo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        Muerto = new com.toedter.calendar.JDateChooser();
        jSeparator4 = new javax.swing.JSeparator();
        Ok = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        Nombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Nacimiento = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        Numero = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu Notaria");

        Volver.setText("Volver");
        Volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolverActionPerformed(evt);
            }
        });

        Trans.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Trans.setMaximumRowCount(5);
        Trans.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar Transacción", "Cambio de Nombre", "Estado Civil", "Registro de Defunción", "Registro de Hijos" }));
        Trans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransActionPerformed(evt);
            }
        });

        Civil.setMaximumRowCount(4);
        Civil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "Soltero/a", "Casado/a", "Union Libre" }));
        Civil.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Estado Civil:");
        jLabel1.setEnabled(false);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Nombre Actual:");
        jLabel2.setEnabled(false);

        Nactual.setEnabled(false);

        Nnuevo.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Nombre Nuevo:");
        jLabel3.setEnabled(false);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Fecha Fallecimiento:");
        jLabel4.setEnabled(false);

        Muerto.setToolTipText("");
        Muerto.setEnabled(false);

        Ok.setText("Aceptar");
        Ok.setEnabled(false);
        Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("Nombre del Hijo:");
        jLabel5.setEnabled(false);

        Nombre.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setText("Fecha Nacimiento:");
        jLabel6.setEnabled(false);

        Nacimiento.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setText("Numero de Hijos:");
        jLabel7.setEnabled(false);

        Numero.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Volver, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Trans, 0, 305, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(Civil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Nactual, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(Nnuevo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Muerto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Numero)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Nacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Trans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Civil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Muerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(Nactual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Nnuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addComponent(jSeparator3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Nacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Numero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Volver, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Vuelve al menú de clases de transacciones, reiniciando la interfaz y variables de este menú
    private void VolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolverActionPerformed
        this.setVisible(false);
        usuario.Abrirmenu();
        start();
    }
    // Función para reiniciar la interfaz y variables de la clase luego de salir del menú de la notaria
    public void start(){
        Trans.setSelectedIndex(0);
        jLabel1.setEnabled(false);
        jLabel2.setEnabled(false);
        jLabel3.setEnabled(false);
        jLabel4.setEnabled(false);
        jLabel5.setEnabled(false);
        jLabel6.setEnabled(false);
        jLabel7.setEnabled(false);
        Civil.setEnabled(false);
        Civil.setSelectedIndex(0);
        Nactual.setEnabled(false);
        Nactual.setText("");
        Nnuevo.setEnabled(false);
        Nnuevo.setText("");
        Muerto.setEnabled(false);
        Muerto.setDate(null);
        Nombre.setEnabled(false);
        Nombre.setText("");
        Numero.setEnabled(false);
        Numero.setText("");
        Nacimiento.setEnabled(false);
        Nacimiento.setDate(null);
        Ok.setEnabled(false);
    }//GEN-LAST:event_VolverActionPerformed
    /*Al seleccionar el menú se activan las opciones con las cuales se generar
    cada uno de los tipos de transacción, además de activar el botón de aceptar
    1 Cambio de Nombre
    2 Estado Civil
    3 Registro de Defunción (falta hacer que se inhabilite el documento)
    4 Registro de hijos*/
    private void TransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransActionPerformed
        switch(Trans.getSelectedIndex()){
            case 1:
                jLabel1.setEnabled(false);
                jLabel2.setEnabled(true);
                jLabel3.setEnabled(true);
                jLabel4.setEnabled(false);
                jLabel5.setEnabled(false);
                jLabel6.setEnabled(false);
                jLabel7.setEnabled(false);
                Civil.setEnabled(false);
                Civil.setSelectedIndex(0);
                Nactual.setEnabled(true);
                Nactual.setText("");
                Nnuevo.setEnabled(true);
                Nnuevo.setText("");
                Muerto.setEnabled(false);
                Muerto.setDate(null);
                Nombre.setEnabled(false);
                Nombre.setText("");
                Numero.setEnabled(false);
                Numero.setText("");
                Nacimiento.setEnabled(false);
                Nacimiento.setDate(null);
                Ok.setEnabled(true);
                break;
            case 2:
                jLabel1.setEnabled(true);
                jLabel2.setEnabled(false);
                jLabel3.setEnabled(false);
                jLabel4.setEnabled(false);
                jLabel5.setEnabled(false);
                jLabel6.setEnabled(false);
                jLabel7.setEnabled(false);
                Civil.setEnabled(true);
                Civil.setSelectedIndex(0);
                Nactual.setEnabled(false);
                Nactual.setText("");
                Nnuevo.setEnabled(false);
                Nnuevo.setText("");
                Muerto.setEnabled(false);
                Muerto.setDate(null);
                Nombre.setEnabled(false);
                Nombre.setText("");
                Numero.setEnabled(false);
                Numero.setText("");
                Nacimiento.setEnabled(false);
                Nacimiento.setDate(null);
                Ok.setEnabled(true);
                break;
            case 3:
                jLabel1.setEnabled(false);
                jLabel2.setEnabled(false);
                jLabel3.setEnabled(false);
                jLabel4.setEnabled(true);
                jLabel5.setEnabled(false);
                jLabel6.setEnabled(false);
                jLabel7.setEnabled(false);
                Civil.setEnabled(false);
                Civil.setSelectedIndex(0);
                Nactual.setEnabled(false);
                Nactual.setText("");
                Nnuevo.setEnabled(false);
                Nnuevo.setText("");
                Muerto.setEnabled(true);
                Muerto.setDate(null);
                Nombre.setEnabled(false);
                Nombre.setText("");
                Numero.setEnabled(false);
                Numero.setText("");
                Nacimiento.setEnabled(false);
                Nacimiento.setDate(null);
                Ok.setEnabled(true);
                break;
            case 4:
                jLabel1.setEnabled(false);
                jLabel2.setEnabled(false);
                jLabel3.setEnabled(false);
                jLabel4.setEnabled(false);
                jLabel5.setEnabled(true);
                jLabel6.setEnabled(true);
                jLabel7.setEnabled(true);
                Civil.setEnabled(false);
                Civil.setSelectedIndex(0);
                Nactual.setEnabled(false);
                Nactual.setText("");
                Nnuevo.setEnabled(false);
                Nnuevo.setText("");
                Muerto.setEnabled(false);
                Muerto.setDate(null);
                Nombre.setEnabled(true);
                Nombre.setText("");
                Numero.setEnabled(true);
                Numero.setText("");
                Nacimiento.setEnabled(true);
                Nacimiento.setDate(null);
                Ok.setEnabled(true);
                break;
            default:
                jLabel1.setEnabled(false);
                jLabel2.setEnabled(false);
                jLabel3.setEnabled(false);
                jLabel4.setEnabled(false);
                jLabel5.setEnabled(false);
                jLabel6.setEnabled(false);
                jLabel7.setEnabled(false);
                Civil.setEnabled(false);
                Civil.setSelectedIndex(0);
                Nactual.setEnabled(false);
                Nactual.setText("");
                Nnuevo.setEnabled(false);
                Nnuevo.setText("");
                Muerto.setEnabled(false);
                Muerto.setDate(null);
                Nombre.setEnabled(false);
                Nombre.setText("");
                Numero.setEnabled(false);
                Numero.setText("");
                Nacimiento.setEnabled(false);
                Nacimiento.setDate(null);
                Ok.setEnabled(false);
                break;
        }
    }//GEN-LAST:event_TransActionPerformed
    /*al activar este botón se envía la transacción, generando un texto plano con 
    los datos que debe tener una como el ID, Serial del documento. La clase de la 
    transacción como notaria y el tipo de la transacción, si en el menú desplegable
    de transacciones el índice es:
    1. indica que la transacción es de tipo CambioNombre, por lo que se verifica
    que el nombre actual y nombre nuevo hayan sido ingresado en la interfaz, para
    agregarlos como los datos de la transacción.
    2. indica que la transacción es de tipo EstadoCivil, se verifica que la persona
    hay seleccionado un estado civil del menú desplegable, de acuerdo al índice del 
    menú el dato de transacción es 1 soltero/a, 2 casado/a y 3 UniónLibre.
    3. indica que la transacción es de tipo RegistroDefuncion, donde se verifica
    que se haya ingresado la fecha de muerte, la cual se escribirá en el texto plano
    como los datos de la transacción.
    4. indica que la transacción es de tipo RegistroHijos, donde se verifican 
    que se hayan ingresados los datos del nombre del hijo, número de hijos y
    fecha de nacimiento que con esta información se forman los datos del texto
    plano de la transacción.
    Luego se debe enviar el texto plano (se imprime) y se reinician todos los 
    datos de la app para poder realizar una nueva transacción*/
    private void OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkActionPerformed
        String tran;
        DateFormat df = new SimpleDateFormat("d/MM/yyyy");
        switch(Trans.getSelectedIndex()){
            case 1:
                if(Nactual.getText().length()>0 && Nnuevo.getText().length()>0){
                    tran= "ID:"+Integer.toString(usuario.ID)+" Serial:"+Integer.toString(usuario.Serial)+" Clase:Notaria Tipo:CambioNombre Datos:"+Nactual.getText()+"-"+Nnuevo.getText();
                    System.out.println("Transacción de "+usuario.Nombre+"\n"+tran);
                    JOptionPane.showMessageDialog(this,"Transacción Enviada");
                    usuario.setVisible(true);
                    this.setVisible(false);
                    usuario.borrar();
                    start();
                }
                else{
                    JOptionPane.showMessageDialog(this,"ERROR faltan datos");
                }
                break;
            case 2:
                switch (Civil.getSelectedIndex()){
                    case 1:
                        tran= "ID:"+Integer.toString(usuario.ID)+" Serial:"+Integer.toString(usuario.Serial)+" Clase:Notaria Tipo:EstadoCivil Datos:Soltero/a";
                        System.out.println("Transacción de "+usuario.Nombre+"\n"+tran);
                        JOptionPane.showMessageDialog(this,"Transacción Enviada");
                        usuario.setVisible(true);
                        this.setVisible(false);
                        usuario.borrar();
                        start();
                        break;
                    case 2:
                        tran= "ID:"+Integer.toString(usuario.ID)+" Serial:"+Integer.toString(usuario.Serial)+" Clase:Notaria Tipo:EstadoCivil Datos:Casado/a";
                        System.out.println("Transacción de "+usuario.Nombre+"\n"+tran);
                        JOptionPane.showMessageDialog(this,"Transacción Enviada");
                        usuario.setVisible(true);
                        this.setVisible(false);
                        usuario.borrar();
                        start();
                        break;
                    case 3:
                        tran= "ID:"+Integer.toString(usuario.ID)+" Serial:"+Integer.toString(usuario.Serial)+" Clase:Notaria Tipo:EstadoCivil Datos:UniónLibre";
                        System.out.println("Transacción de "+usuario.Nombre+"\n"+tran);
                        JOptionPane.showMessageDialog(this,"Transacción Enviada");
                        usuario.setVisible(true);
                        this.setVisible(false);
                        usuario.borrar();
                        start();
                        break;
                    default:
                        JOptionPane.showMessageDialog(this,"ERROR debe escoger una opción");
                        break;
                }
                break;
            case 3:
                if(Muerto.getDate()!=null){
                    tran= "ID:"+Integer.toString(usuario.ID)+" Serial:"+Integer.toString(usuario.Serial)+" Clase:Notaria Tipo:RegistroDefuncion Datos:"+df.format(Muerto.getDate());
                    System.out.println("Transacción de "+usuario.Nombre+"\n"+tran);
                    JOptionPane.showMessageDialog(this,"Transacción Enviada");
                    usuario.setVisible(true);
                    this.setVisible(false);
                    usuario.borrar();
                    start();
                }
                else{
                    JOptionPane.showMessageDialog(this,"ERROR ingrese la fecha");
                }
                break;
            case 4:
                if(Nacimiento.getDate()!=null && Nombre.getText().length()>0 && Numero.getText().length()>0 && Numero.getText().matches("[0-9]+")){
                    tran= "ID:"+Integer.toString(usuario.ID)+" Serial:"+Integer.toString(usuario.Serial)+" Clase:Notaria Tipo:RegistroHijos Datos:"+Nombre.getText()+"-"+Numero.getText()+"-"+df.format(Nacimiento.getDate());
                    System.out.println("Transacción de "+usuario.Nombre+"\n"+tran);
                    JOptionPane.showMessageDialog(this,"Transacción Enviada");
                    usuario.setVisible(true);
                    this.setVisible(false);
                    usuario.borrar();
                    start();
                }
                else{
                    JOptionPane.showMessageDialog(this,"ERROR faltan datos o mal ingresados");
                }
                break;
            default:
                break;
        }
    }//GEN-LAST:event_OkActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Notaria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Civil;
    private com.toedter.calendar.JDateChooser Muerto;
    private com.toedter.calendar.JDateChooser Nacimiento;
    private javax.swing.JTextField Nactual;
    private javax.swing.JTextField Nnuevo;
    private javax.swing.JTextField Nombre;
    private javax.swing.JTextField Numero;
    private javax.swing.JButton Ok;
    private javax.swing.JComboBox<String> Trans;
    private javax.swing.JButton Volver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    // End of variables declaration//GEN-END:variables
}
